{"version":3,"sources":["components/Navbar.js","components/TextUtility.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","onClick","toggleMode","htmlFor","TextUtility","useState","text","setText","onChange","event","target","value","rows","style","backgroundColor","color","disabled","length","newText","toUpperCase","sentence","split","i","substr","join","toLowerCase","words","ftext","endsWith","showalert","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","filter","element","Alert","height","alert","role","word","lower","slice","capitalise","message","App","setalert","setTimeout","setmode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4LAKe,SAASA,EAAOC,GAC7B,OACE,mCACA,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACE,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,yBAAjC,0BACA,wBAAQF,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMH,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,UACE,qBAAIJ,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,yBAAxD,oBAEF,oBAAIF,UAAU,iBAShB,sBAAKA,UAAS,sCAAgD,UAAfD,EAAME,KAAmB,OAAS,SAAjF,UACE,uBAAOD,UAAU,mBAAmBK,QAASN,EAAMO,WAAYH,KAAK,WAAWC,GAAG,2BAClF,uBAAOJ,UAAU,oBAAoBO,QAAQ,0BAA7C,0C,MC1BG,SAASC,EAAYT,GAChC,IA6DA,EAAwBU,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,qCACI,sBAAKX,UAAU,iBAAf,UACI,uDACA,sBAAKA,UAAU,QAAf,UAEI,0BAAUA,UAAU,eAAeI,GAAG,QAAQQ,SA/DvC,SAACC,GAEpBF,EAAQE,EAAMC,OAAOC,QA6D+DA,MAAOL,EAAMM,KAAK,IAAIC,MAAO,CAAEC,gBAAgC,UAAfnB,EAAME,KAAmB,QAAU,mBAC3JkB,MAAqB,UAAdpB,EAAME,KAAiB,QAAU,WACxC,wBAAQmB,SAAwB,IAAdV,EAAKW,OAAYrB,UAAU,4BAA4BK,QAtEvE,WAEd,IAAIiB,EAAUZ,EAAKa,cACnBZ,EAAQW,IAmEI,kCACA,wBAASF,SAAwB,IAAdV,EAAKW,OAAYrB,UAAU,4BAA4BK,QA9D/D,WAGvB,IADA,IAAImB,EAAWd,EAAKe,MAAM,KACjBC,EAAI,EAAGA,EAAIF,EAASH,OAAQK,IACjCF,EAASE,GAAKF,EAASE,GAAG,GAAGH,cAAgBC,EAASE,GAAGC,OAAO,GAEpE,IAAIL,EAAUE,EAASI,KAAK,KAC5BjB,EAAQW,IAuDI,iCACA,wBAASF,SAAwB,IAAdV,EAAKW,OAAarB,UAAU,4BAA4BK,QAtDzE,WACd,IAAIiB,EAAUZ,EAAKmB,cACnBlB,EAAQW,IAoDI,kCAEA,wBAAQF,SAAwB,IAAdV,EAAKW,OAAarB,UAAU,4BAA4BK,QAnCjE,WAGrB,IAFA,IAAIyB,EAAQpB,EAAKe,MAAM,KACVM,EAAQ,IACZL,EAAI,EAAGA,EAAII,EAAMT,OAAQK,IAC1BI,EAAMJ,GAAGM,SAAS,UACED,EAAQA,EAAQ,IAA1BD,EAAMJ,IAIV,MAAVK,GACFhC,EAAMkC,UAAU,6BAA8B,UAC9CtB,EAAQ,MAGNA,EAAQoB,IAqBA,wBAEA,wBAASX,SAAwB,IAAdV,EAAKW,OAAYrB,UAAU,4BAA4BK,QAlD7E,WACT,IAAIK,EAAOwB,SAASC,eAAe,SACnCzB,EAAK0B,SAELC,UAAUC,UAAUC,UAAU7B,EAAKK,OACnCmB,SAASM,eAAeC,kBACZ,OAAT/B,EACCX,EAAMkC,UAAU,iCAAkC,UAGjDlC,EAAMkC,UAAU,2BAA4B,YAwCrC,kBACA,wBAAUjC,UAAU,2BAA2BK,QAvD3C,WAEhBM,EADc,KAsDF,yBAGR,sBAAKX,UAAU,YAAf,UACI,yDACA,8BAAIU,EAAKW,OAAT,mBAAiCX,EAAKe,MAAM,KAAKiB,QAAO,SAACC,GAAa,OAAwB,IAAjBA,EAAQtB,UAAaA,OAAlG,aAEA,+CACA,4BAAIX,EAAKW,OAAO,EAAEX,EAAK,0BCzExBkC,MAff,SAAe7C,GAMX,OACA,qBAAKkB,MAAO,CAAC4B,OAAO,QAApB,SACM9C,EAAM+C,OAAU,sBAAK9C,UAAS,sBAAiBD,EAAM+C,MAAM3C,KAA7B,gCAAiE4C,KAAM,QAArF,UACZ,mCAPS,SAACC,GAChB,IAAMC,EAAQD,EAAKnB,cACnB,OAAOoB,EAAM,GAAG1B,cAAgB0B,EAAMC,MAAM,GAK7BC,CAAWpD,EAAM+C,MAAM3C,MAAhC,OADY,MACwCJ,EAAM+C,MAAMM,cCsC/DC,MA1Cf,WACE,MAA2B5C,mBAAS,MAApC,mBAAQqC,EAAR,KAAeQ,EAAf,KACMrB,EAAY,SAACmB,EAAQjD,GACzBmD,EACE,CACEF,QAAQA,EACRjD,KAAKA,IAGToD,YAAW,WACTD,EAAS,QACR,OAKL,EAAuB7C,mBAAS,SAAhC,mBAAOR,EAAP,KAAYuD,EAAZ,KAiBA,OACA,qCACF,cAAC1D,EAAD,CAAQG,KAAMA,EAAMK,WAlBC,WACL,SAATL,GACDuD,EAAQ,SACRtB,SAASuB,KAAKxC,MAAMC,gBAAiB,QACrCgB,SAASuB,KAAKxC,MAAME,MAAO,UAC3Bc,EAAU,qBAAsB,aAGhCuB,EAAQ,QACRtB,SAASuB,KAAKxC,MAAMC,gBAAiB,UACrCgB,SAASuB,KAAKxC,MAAME,MAAO,QAC3Bc,EAAU,iBAAiB,UAOWa,MAAOA,IACjD,cAAC,EAAD,CAAOA,MAAOA,IAChB,cAACtC,EAAD,CAAaP,KAAMA,EAAOgC,UAAWA,QChCtByB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASC,eAAe,SAM1BuB,K","file":"static/js/main.8545e660.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}  >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"http://pankajkumar.ml/\">Text editor.</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"http://pankajkumar.ml/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item \">\r\n              \r\n            </li>\r\n\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2 \" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary \" type=\"submit\">Search</button>\r\n      </form> */}\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault \">Enable Darkmode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </nav>\r\n    \r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\n\r\n\r\nexport default function TextUtility(props) {\r\n    const uppercase = () => {\r\n        \r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleonchange = (event) => {\r\n        \r\n        setText(event.target.value)\r\n    }\r\n    const capitaliseSentence = () => {\r\n\r\n        let sentence = text.split(\".\");\r\n        for (let i = 0; i < sentence.length; i++) {\r\n            sentence[i] = sentence[i][0].toUpperCase() + sentence[i].substr(1);\r\n        }\r\n        let newText = sentence.join(\".\");\r\n        setText(newText);\r\n    }\r\n    const lowercase = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleclear = () => {\r\n        let newText = '';\r\n        setText(newText);\r\n    }\r\n    const copy = () => {\r\n        var text = document.getElementById('mybox');\r\n        text.select();\r\n        \r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        if(text === null){\r\n            props.showalert(\"What do you want me to Copy..?\", \"danger\");\r\n            \r\n        }\r\n        else{props.showalert(\"Text Copied to Clipboard\", \"success\");}\r\n        \r\n    }\r\n    const handlelinksearch = () => {\r\n        let words = text.split(\" \");\r\n        var newText, ftext = \" \";\r\n        for (let i = 0; i < words.length; i++) {\r\n            if (words[i].endsWith(\".com\")) {\r\n                newText = words[i]; ftext = ftext + \" \" + newText;\r\n            }\r\n\r\n        }\r\n        if (ftext === ' ') {\r\n          props.showalert(\"There Are no Links present\", \"danger\");\r\n          setText(\" \");\r\n        }\r\n        else {\r\n            setText(ftext);\r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\">\r\n                <h1>Enter Your text here.</h1>\r\n                <div className=\"mb-3 \" >\r\n\r\n                    <textarea className=\"form-control\" id=\"mybox\" onChange={handleonchange} value={text} rows=\"9\" style={{ backgroundColor: props.mode === 'light' ? 'white' : 'rgb(10, 10, 128)' ,\r\n                    color: props.mode ==='light'? 'black' : 'white'}}></textarea>\r\n                    <button disabled={text.length===0} className=\"btn btn-primary my-2 mx-1\" onClick={uppercase} >Convert to UpperCase</button>\r\n                    <button  disabled={text.length===0} className=\"btn btn-primary my-2 mx-1\" onClick={capitaliseSentence} >Capitalise Sentence</button>\r\n                    <button  disabled={text.length===0}  className=\"btn btn-primary my-2 mx-1\" onClick={lowercase} >Convert to lowercase</button>\r\n\r\n                    <button disabled={text.length===0}  className=\"btn btn-primary my-2 mx-1\" onClick={handlelinksearch} >Find Links</button>\r\n\r\n                    <button  disabled={text.length===0} className=\"btn btn-primary my-2 mx-1\" onClick={copy}>Copy</button>\r\n                    <button   className=\"btn btn-danger my-2 mx-1\" onClick={handleclear} >Clear</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h1>Your text consists of: </h1> \r\n                <p>{text.length} characters and {text.split(\" \").filter((element)=> { return element.length!==0}).length} Words.</p>\r\n                \r\n                <h2>Text Preview:</h2>\r\n                <p>{text.length>0?text:\"Write some text\"\r\n                    }\r\n                </p>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    \r\n    const capitalise = (word)=> {\r\n        const lower = word.toLowerCase();\r\n        return lower[0].toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n    <div style={{height:'50px'}}>{\r\n          props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role= \"alert\" >\r\n              <strong>{capitalise(props.alert.type)} </strong> : {props.alert.message}\r\n                </div>}\r\n     </div>       \r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n","import Navbar from './components/Navbar';\nimport './App.css';\nimport TextUtility from './components/TextUtility'\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n\nfunction App() {\n  const  [alert, setalert] = useState(null);\n  const showalert = (message,type)=> {\n    setalert(\n      {\n        message:message,\n        type:type\n      }\n    )\n    setTimeout(() => {\n      setalert(null);\n    }, 1300);\n  }\n\n\n\n  const [mode,setmode] = useState('light');\n  const toggleMode = ()=> {\n    if(mode === 'dark'){ \n      setmode('light');\n      document.body.style.backgroundColor ='white';\n      document.body.style.color ='#151455';\n      showalert(\"Light mode enabled\", \"success\");\n    }\n    else{ \n      setmode('dark');\n      document.body.style.backgroundColor ='#151455';\n      document.body.style.color ='white';\n      showalert(\") mode enabled\",\"dark\")\n     \n      \n    }\n  }\n  return (\n  <>\n<Navbar mode={mode} toggleMode={toggleMode} alert={alert} />\n  <Alert alert={alert} />\n<TextUtility mode={mode}  showalert={showalert}/>\n  </>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}